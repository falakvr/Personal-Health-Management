/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dbms_p1;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableColumnModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author falak
 */
public class HealthIndicator extends javax.swing.JFrame {

    /**
     * Creates new form HealthIndicator
     */
    public HealthIndicator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        specRec = new javax.swing.JTable();
        back = new javax.swing.JButton();
        addObs = new javax.swing.JButton();
        viewObs = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Health Indicators");

        specRec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Obs. Type", "Frequency", "Lower Threshold", "Upper Threshold"
            }
        ));
        jScrollPane1.setViewportView(specRec);

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        addObs.setText("Add Observation");
        addObs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addObsActionPerformed(evt);
            }
        });

        viewObs.setText("View Observation");
        viewObs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewObsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(addObs, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(viewObs, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addObs)
                    .addComponent(viewObs))
                .addGap(32, 32, 32)
                .addComponent(back)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        if (Setup.logintype.equals("Patient")){
            Patient patient = new Patient();
            patient.setVisible(true);
        } else if (Setup.logintype.equals("Health_Supporter")){
            HSPatientInfo patinfo = new HSPatientInfo();
            patinfo.setVisible(true);
        }
        this.setVisible(false);
        
    }//GEN-LAST:event_backActionPerformed

    private void viewObsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewObsActionPerformed
        try {
            // TODO add your handling code here:
            ViewObservation viewobs = new ViewObservation();
            
            Setup.rs = Setup.stmt.executeQuery("SELECT obs_type, "
                    + "TO_CHAR(timestamp1,'dd-mon-yyyy hh.mi AM'), "
                    + "obs_value, TO_CHAR(obs_time,'dd-mon-yyyy hh.mi AM') "
                    + "FROM Observation WHERE "
                    + "patient_id='" + Setup.loginuserid + "'");
            
            viewobs.viewObsTable.setModel(DbUtils.resultSetToTableModel(Setup.rs));
            TableColumnModel tcm = viewobs.viewObsTable.getColumnModel();
            tcm.getColumn(1).setHeaderValue("Time Obs Added");
            tcm.getColumn(3).setHeaderValue("Time Obs Recorded");
            
            
            this.setVisible(false);
            viewobs.setVisible(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(HealthIndicator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_viewObsActionPerformed

    private void addObsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addObsActionPerformed
        // TODO add your handling code here:
        AddObservation addobs = new AddObservation();
        this.setVisible(false);
        addobs.setVisible(true);
    }//GEN-LAST:event_addObsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HealthIndicator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HealthIndicator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HealthIndicator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HealthIndicator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HealthIndicator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addObs;
    private javax.swing.JButton back;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable specRec;
    private javax.swing.JLabel title;
    private javax.swing.JButton viewObs;
    // End of variables declaration//GEN-END:variables
}
