package dbms_p1;

import static java.lang.System.exit;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author falak
 */
public class Login extends javax.swing.JFrame {

    static boolean debug = true;
    Setup newsetup = new Setup();

    /**
     * Creates new form Login
     */
    public Login() {
        newsetup.connect();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LoginAs = new javax.swing.ButtonGroup();
        title = new javax.swing.JLabel();
        uid = new javax.swing.JTextField();
        userID = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        asPatient = new javax.swing.JRadioButton();
        asHS = new javax.swing.JRadioButton();
        signupButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        passwd = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Welcome to Personal Health Management");
        title.setToolTipText("");

        uid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uidActionPerformed(evt);
            }
        });

        userID.setText("UserID");

        password.setText("Password");

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        LoginAs.add(asPatient);
        asPatient.setText("Patient");
        asPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asPatientActionPerformed(evt);
            }
        });

        LoginAs.add(asHS);
        asHS.setText("Health Supporter");
        asHS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asHSActionPerformed(evt);
            }
        });

        signupButton.setText("New User?      Sign Up!");
        signupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        passwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(exitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(uid, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                .addComponent(passwd)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(asPatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(asHS, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                            .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(signupButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE))
                .addGap(197, 197, 197))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userID))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(asPatient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(asHS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(signupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uidActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        /*  Trigger:
        String s = "insert into Health_supporter values ('P1', TO_DATE('2016-10-21','yyyy-mm-dd'), 'P1')";
        try
        {
            Setup.stmt.executeUpdate(s);
        }
        catch(SQLException e)
        {
            System.out.println(e.getMessage());
        }
         */
        if (uid.getText().isEmpty() || passwd.getText().isEmpty() || LoginAs.getSelection() == null) {
            JOptionPane.showMessageDialog(null, "Please provide all login information.");
            return;
        }

        Setup.loginuserid = uid.getText();
        Setup.loginpassword = passwd.getText();
        asHS.setActionCommand("Health_Supporter");
        asPatient.setActionCommand("Patient");
        Setup.logintype = LoginAs.getSelection().getActionCommand();

        if (Login.validate(Setup.loginuserid, Setup.loginpassword, Setup.logintype)) {
            if (Setup.logintype.equals("Patient")) {
                Patient patient = new Patient();
                patient.setVisible(true);
            } else if (Setup.logintype.equals("Health_Supporter")) {
                HealthSupporter hs = new HealthSupporter();
                hs.setVisible(true);
            }
            this.setVisible(false);

            try {
                Setup.stmt.execute("CALL LOW_ACTIVITY()");
            } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid user.");
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void asHSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asHSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_asHSActionPerformed

    private void signupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        SignUp signup = new SignUp();
        signup.setVisible(true);
    }//GEN-LAST:event_signupButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        newsetup.disconnect();
        exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void asPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asPatientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_asPatientActionPerformed

    private void passwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwdActionPerformed

    private static boolean validate(String userid, String password, String LoginAs) {
        String passwd = null;
        try {
            Setup.rs = Setup.stmt.executeQuery("SELECT password FROM Login where user_id = "
                    + "'" + userid + "'");
            while (Setup.rs.next()) {
                passwd = Setup.rs.getString("password");
            }
            System.out.println(userid + "   " + password + "    " + LoginAs);
            System.out.println(passwd);
            if (password.equals(passwd)) {
                String useridDummy = "";
                if (LoginAs.equals("Patient")) {
                    Setup.rs = Setup.stmt.executeQuery("SELECT user_id from People WHERE user_id = "
                            + "'" + userid + "' AND is_patient= 'Y'");

                    while (Setup.rs.next()) {
                        useridDummy = Setup.rs.getString("user_id");
                    }
                } else if (LoginAs.equals("Health_Supporter")) {
                    Setup.rs = Setup.stmt.executeQuery("SELECT user_id from People WHERE user_id = "
                            + "'" + userid + "' AND is_hs = 'Y'");

                    while (Setup.rs.next()) {
                        useridDummy = Setup.rs.getString("user_id");
                    }
                }

                if (useridDummy.isEmpty()) {
                    return false;
                } else {
                    return true;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup LoginAs;
    private javax.swing.JRadioButton asHS;
    private javax.swing.JRadioButton asPatient;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton loginButton;
    private javax.swing.JTextField passwd;
    private javax.swing.JLabel password;
    private javax.swing.JButton signupButton;
    private javax.swing.JLabel title;
    private javax.swing.JTextField uid;
    private javax.swing.JLabel userID;
    // End of variables declaration//GEN-END:variables
}
