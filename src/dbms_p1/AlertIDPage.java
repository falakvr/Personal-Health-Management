/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dbms_p1;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author parinsanghavi
 */
public class AlertIDPage extends javax.swing.JFrame {

    /**
     * Creates new form alertIDPage
     */
    public AlertIDPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        alertTable = new javax.swing.JTable();
        viewAlertButton = new javax.swing.JButton();
        alertID = new javax.swing.JTextField();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        alertTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Alert ID"
            }
        ));
        jScrollPane1.setViewportView(alertTable);

        viewAlertButton.setText("View Alert");
        viewAlertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAlertButtonActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(viewAlertButton)
                        .addGap(100, 100, 100)
                        .addComponent(alertID, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(220, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(back)
                .addGap(98, 98, 98))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewAlertButton)
                    .addComponent(alertID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(back)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewAlertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAlertButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<String> alertList = new ArrayList<String>();
        Setup.alertId = alertID.getText().toString();
        String alertid = alertID.getText().toString();

        if (Setup.logintype.equals("Patient")) {
            try {

                String query_fetchPatList = "SELECT alert_id FROM Alerts WHERE "
                        + "patient_id = '" + Setup.loginuserid + "'";
                System.out.println(query_fetchPatList);

                Setup.rs = Setup.stmt.executeQuery(query_fetchPatList);
                while (Setup.rs.next()) {
                    alertList.add(Setup.rs.getString("alert_id"));
                }

                if (alertList.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "You have no access to any patients");
                } else if (!alertList.contains(alertid)) {
                    JOptionPane.showMessageDialog(null, "Access Denied");
                } else {

                    String update_view = "Update Alerts set viewed='Y' where " + "alert_id='" + Setup.alertId + "' and patient_id='" + Setup.loginuserid + "'";
                    System.out.println(update_view);
                    Setup.stmt.executeUpdate(update_view);

                    Setup.rs = Setup.stmt.executeQuery("SELECT alert_id, alert_type, obs_type, action_taken, viewed from Alerts WHERE "
                            + "alert_id='" + Setup.alertId + "' and patient_id='" + Setup.loginuserid + "'");
                    ClearAlert c = new ClearAlert();
                    c.setVisible(true);
                    this.setVisible(false);
                    c.alertTable2.setModel(DbUtils.resultSetToTableModel(Setup.rs));

                }
                alertList.clear();
            } catch (SQLException ex) {
                Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                String query_fetchPatList = "SELECT alert_id FROM Alerts WHERE "
                        + "patient_id = '" + Setup.patientOfHS + "'";
                System.out.println(query_fetchPatList);

                Setup.rs = Setup.stmt.executeQuery(query_fetchPatList);
                while (Setup.rs.next()) {
                    alertList.add(Setup.rs.getString("alert_Id"));
                }

                if (alertList.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "You have no access to any patients");
                } else if (!alertList.contains(alertid)) {
                    JOptionPane.showMessageDialog(null, "Access Denied");
                } else {
                    String update_view = "Update Alerts set viewed='Y' where " + "alert_id='" + Setup.alertId + "' and patient_id='" + Setup.loginuserid + "'";
                    System.out.println(update_view);
                    Setup.stmt.executeUpdate(update_view);
                    Setup.rs = Setup.stmt.executeQuery("SELECT alert_id, alert_type, obs_type, action_taken, viewed from Alerts WHERE "
                            + "alert_id='" + Setup.alertId + "' and patient_id='" + Setup.patientOfHS + "'");
                    ClearAlert c = new ClearAlert();
                    c.setVisible(true);
                    this.setVisible(false);
                    c.alertTable2.setModel(DbUtils.resultSetToTableModel(Setup.rs));

                }
                alertList.clear();

            } catch (SQLException ex) {
                Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_viewAlertButtonActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        if (Setup.logintype.equals("Patient")) {
            new Patient().setVisible(true);
            this.setVisible(false);
        } else {
            new HSPatientInfo().setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlertIDPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlertIDPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlertIDPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlertIDPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlertIDPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField alertID;
    public javax.swing.JTable alertTable;
    private javax.swing.JButton back;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewAlertButton;
    // End of variables declaration//GEN-END:variables
}
